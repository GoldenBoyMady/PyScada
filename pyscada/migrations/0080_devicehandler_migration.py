# Generated by Django 2.2.8 on 2021-06-01 09:38

from django.db import migrations, models
import logging

logger = logging.getLogger(__name__)


def move_visa_device_handlers(apps, schema_editor):
    # We can't import the Person model directly as it may be a newer
    # version than this migration expects. We use the historical version.
    VisaHandler = apps.get_model("visa", "VISADeviceHandler")
    Handler = apps.get_model("pyscada", "DeviceHandler")
    VisaDevice = apps.get_model("visa", "VisaDevice")
    items = []
    count = 0
    for item in VisaHandler.objects.using(schema_editor.connection.alias).all():
        items.append(Handler(name=item.name,
                             handler_class=item.handler_class,
                             handler_path=item.handler_path,
                             ))
        count += 1

    Handler.objects.bulk_create(items)

    devices = []
    for item in VisaHandler.objects.using(schema_editor.connection.alias).all():
        for device in VisaDevice.objects.using(schema_editor.connection.alias).all():
            if device.instrument == item:
                device.instrument_handler = Handler.objects.filter(name=item.name,
                                                                   handler_class=item.handler_class,
                                                                   handler_path=item.handler_path,).first()
                devices.append(device)

        # item.delete()
    VisaDevice.objects.bulk_update(devices, ['instrument_handler'])

    logger.info('moved %d VisaHandler\n' % count)


def move_smbus_device_handlers(apps, schema_editor):
    # We can't import the Person model directly as it may be a newer
    # version than this migration expects. We use the historical version.
    SMBusHandler = apps.get_model("smbus", "SMBusDeviceHandler")
    Handler = apps.get_model("pyscada", "DeviceHandler")
    SMBusDevice = apps.get_model("smbus", "SMBusDevice")
    items = []
    count = 0
    for item in SMBusHandler.objects.using(schema_editor.connection.alias).all():
        items.append(Handler(name=item.name,
                             handler_class=item.handler_class,
                             handler_path=item.handler_path,
                             ))

        count += 1

    Handler.objects.bulk_create(items)

    devices = []
    for item in SMBusHandler.objects.using(schema_editor.connection.alias).all():
        for device in SMBusDevice.objects.using(schema_editor.connection.alias).all():
            if device.instrument == item:
                device.instrument_handler = Handler.objects.filter(name=item.name,
                                                                   handler_class=item.handler_class,
                                                                   handler_path=item.handler_path,).first()
                devices.append(device)

        # item.delete()
    SMBusDevice.objects.bulk_update(devices, ['instrument_handler'])

    logger.info('moved %d SMBusHandler\n' % count)


class Migration(migrations.Migration):

    dependencies = [
        ('pyscada', '0079_devicehandler'),
        ('smbus', '0006_smbusdevice_instrument_handler'),
        ('visa', '0009_visadevice_instrument_handler'),
    ]

    operations = [
        migrations.RunPython(move_visa_device_handlers, reverse_code=migrations.RunPython.noop),
        migrations.RunPython(move_smbus_device_handlers, reverse_code=migrations.RunPython.noop),
    ]
